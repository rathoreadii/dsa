class Solution {
public:
    bool canBeValid(string s, string locked) {
        
        int n= s.length();
        if(n % 2 != 0)
            return false;
        
        int op= 0;
        int ul= 0;

        // forward pass
        for(int i= 0; i<n; i++)
        {
            if(locked[i] == '0')
                ul++;
            else if(s[i] == '(')
                op++;
            else
                op--;
            
            if(op + ul < 0)
                return false;
        }

        //backward pass
        op= 0;
        ul= 0;

        for(int i= n-1; i>= 0; i--)
        {
            if(locked[i] == '0')
                ul++;
            else if(s[i] == ')')
                op++;
            else
                op--;
            
            if(op + ul < 0)
                return false;
        }

        return true;
    }
};
