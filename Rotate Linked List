/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

int getSize(Node* head)
{
     int s= 0;
     while(head)
     {
          s++;
          head= head->next;
     }
     
     return s;
}

Node *rotate(Node *head, int k) {
     

     if(!head || !head->next || k == 0)
          return head;
     
     Node* curr= head;

     int size= getSize(curr);

     // if k >= size
     k= k % size;  
     if(k == 0)
          return head;

     int dis= size - k;

     for(int i= 1; i< dis; i++)
          curr= curr->next;

     Node* newHead= curr->next;
     curr->next= nullptr;
     Node* tail= newHead;

     while(tail->next)
          tail= tail->next;
     
     tail->next= head;

     return newHead;

}
