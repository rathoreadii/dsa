class Solution {
private:
    int check(int target, vector<int>& tops, vector<int>& bottoms)
    {
        int tRot= 0;
        int bRot= 0;
        int n= tops.size();

        for(int i= 0; i<n; i++)
        {
            if(target != tops[i] && target != bottoms[i])
                return -1;
            else if(tops[i] != target)
                tRot++;
            else if(bottoms[i] != target)
                bRot++;
        }

        return min(tRot, bRot);
    }

public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        
        int rot1= check(tops[0], tops, bottoms);
        int rot2= check(bottoms[0], tops, bottoms);

        if(rot1 != -1 && rot2 != -1)
            return min(rot1, rot2);
        else if(rot1 != -1)
            return rot1;
        else
            return rot2;

    }
};
