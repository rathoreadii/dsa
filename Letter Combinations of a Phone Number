class Solution {
public:
    unordered_map<char, string> val= {
            {'2', "abc"}, {'3', "def"}, {'4', "ghi"}, {'5', "jkl"},
            {'6', "mno"}, {'7', "pqrs"}, {'8', "tuv"}, {'9', "wxyz"}
        };

    vector<string> res;

    void backtrack(string digits, int i, string& path){
        if(i == digits.size()){
            res.push_back(path);
            return;
        }

        char digit= digits[i];
        for(char c: val[digit]){
            path.push_back(c);
            backtrack(digits, i+1, path);
            path.pop_back();
        }
    }

    vector<string> letterCombinations(string digits) {
        if(digits.empty()){
            return {};
        }

        string path;
        backtrack(digits, 0, path);
        return res;
    }
};
